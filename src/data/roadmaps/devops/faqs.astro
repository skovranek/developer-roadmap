---
import type { FAQType } from '../../../components/FAQs/FAQs.astro';

export const faqs: FAQType[] = [
  {
    question: 'How do Agile and DevOps interrelate?',
    answer: [
      'Agile and DevOps both prioritize collaboration, continuous improvement, and delivering working software. They can be used together to create a more efficient software development process. Agile emphasizes iterative development and customer satisfaction, while DevOps emphasizes automating processes and integrating development and operations teams. When used together, Agile and DevOps can improve software development and delivery by streamlining processes and enhancing collaboration.',
    ],
  },
  {
    question: 'What are some misconceptions about DevOps?',
    answer: [
      'Some common misconceptions about DevOps include:',
      "**DevOps is just automation**: While automation is an important part of DevOps, it's not the only thing. DevOps is a culture that emphasizes collaboration, communication, and integration between development and operations teams to improve the quality and speed of software delivery.",
      '**DevOps is just a job title**: DevOps is a mindset and set of practices, not a specific job title. Anyone involved in the software development and delivery process can adopt a DevOps mindset and apply DevOps practices in their work, including developers, testers, operations engineers, and others.',
      '**DevOps eliminates the need for IT operations**: DevOps does not eliminate the need for IT operations. Instead, it changes the way that operations teams work by promoting collaboration with development teams and introducing new tools and processes for deployment, monitoring, and maintenance.',
    ],
  },
  {
    question: 'How to become a DevOps Engineer?',
    answer: [
      'To [become a DevOps Engineer](https://roadmap.sh/devops/how-to-become-devops-engineer), you need to have technical skills in areas such as development, automation, containerization, cloud, CI/CD pipelines etc. Some sample tools and technologies to learn may include any programming language, AWS, Ansible, Terraform, Docker, Kubernetes, Jenkins, Git, and monitoring and logging tools. Gain experience by working on DevOps projects, develop a DevOps mindset, get certified, and apply for DevOps Engineer positions by highlighting your skills and experience in your resume. Start your [career path in DevOps engineering](https://roadmap.sh/devops/career-path) by working on some [DevOps projects](https://roadmap.sh/devops/projects).',
    ],
  },
  {
    question: 'What skills are required to become a DevOps Engineer?',
    answer: [
      'To become a DevOps Engineer, you need to have a combination of technical and soft skills. Technical skills include knowledge of programming languages, automation tools, containerization, cloud platforms, CI/CD pipelines, and monitoring and logging tools. Soft skills include communication, collaboration, problem-solving, and adaptability. Some sample tools and technologies to learn may include any programming language, AWS, Ansible, Terraform, Docker, Kubernetes, Jenkins, Git, and monitoring and logging tools. Gain experience by working on DevOps projects, develop a DevOps mindset, get certified, and apply for DevOps Engineer positions by highlighting your [DevOps skills](https://roadmap.sh/devops/skills) and experience in your resume.',
    ],
  },
  {
    question: 'What is the difference between SRE and DevOps?',
    answer: [
      'The difference between [DevOps Engineer vs SRE](https://roadmap.sh/devops/devops-vs-sre) lies in focus: DevOps Engineers improve software delivery and infrastructure automation, bridging development and operations, while Site Reliability Engineers (SREs) ensure system reliability and performance, applying software engineering to operations. DevOps emphasizes CI/CD and collaboration, whereas SREs prioritize monitoring, incident response, and scalability.',
    ],
  },
  {
    question: 'How do I prepare for a DevOps interview?',
    answer: [
      'A great way to prepare for a DevOps interview is by building [DevOps projects](https://roadmap.sh/devops/projects) to validate your skills as well as reviewing common [devops interview questions](https://roadmap.sh/questions/devops) to ensure you capture any gaps in your understanding.',
    ],
  },
  {
    question: 'What is shift-left?',
    answer: [
      'Shift left is a software development practice that involves moving tasks and processes earlier in the development lifecycle. By shifting tasks left, teams can identify and address issues earlier in the development process, reducing the cost and effort required to fix them. [Shift left](https://roadmap.sh/devops/shift-left-testing) practices include implementing automated testing, code reviews, and security checks early in the development process to catch and fix issues before they become more costly to address.',
    ],
  },
  {
    question: 'What is a DevOps Lifecycle?',
    answer: [
      'A [DevOps lifecycle](https://roadmap.sh/devops/lifecycle) is a set of practices and processes that help organizations deliver software more quickly and reliably. The DevOps lifecycle typically includes planning, development, testing, deployment, monitoring, and feedback. By automating and integrating these stages, organizations can improve collaboration between development and operations teams, increase the speed of software delivery, and enhance the quality of software products.',
    ],
  },
];
---
